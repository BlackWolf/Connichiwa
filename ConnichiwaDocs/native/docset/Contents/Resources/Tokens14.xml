<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CWWebApplication.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CWWebApplication</TokenIdentifier>
			<Abstract type="html">Represents the web application in Objective-C. This is the central class, mainly responsible for coordinating the different parts of the native layer. It sets up the webserver and BT and receives callbacks from all the classes and initiates appropriate actions. For example, it forwards BT events about device discovery to the web library, or on the other hands forwards connection requests from the web application to BT.</Abstract>
			<DeclaredIn>CWWebApplication.h</DeclaredIn>
            
			
			<NodeRef refid="14"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/setDeviceName:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CWWebApplication.h</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) NSString *deviceName</Declaration>
			
			
			<Anchor>//api/name/deviceName</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/deviceName</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CWWebApplication.h</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) NSString *deviceName</Declaration>
			
			
			<Anchor>//api/name/deviceName</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CWWebApplication/deviceName</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CWWebApplication.h</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) NSString *deviceName</Declaration>
			
			
			<Anchor>//api/name/deviceName</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/launchWithDocumentRoot:onWebview:port:</TokenIdentifier>
			<Abstract type="html">Starts the web application on the given webview. This will fire up the webserver, which will serve the given document root and listen on the specified port.</Abstract>
			<DeclaredIn>CWWebApplication.h</DeclaredIn>
			
			<Declaration>- (void)launchWithDocumentRoot:(NSString *)documentRoot onWebview:(UIWebView *)webView port:(int)port</Declaration>
			<Parameters>
				<Parameter>
					<Name>documentRoot</Name>
					<Abstract type="html">The full path where the web application files are stored. This will be served as the root of the webserver. For security reasons, it is advised to use a dictionary where ONLY the files of the web application are stored, otherwise access to the other files in the directory can not be precluded.</Abstract>
				</Parameter><Parameter>
					<Name>webView</Name>
					<Abstract type="html">The webview on which the local content of the web application is displayed. The view must not be used for anything. Connichiwa will set the delegate of the view.</Abstract>
				</Parameter><Parameter>
					<Name>port</Name>
					<Abstract type="html">The port on which the webserver will listen on. Note that the webserver will also act as a websocket server, the websocket port will be this + 1</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/launchWithDocumentRoot:onWebview:port:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/launchWithDocumentRoot:onWebview:</TokenIdentifier>
			<Abstract type="html">The same as launchWithDocumentRoot:onWebview:port: but will use the default port (8000)</Abstract>
			<DeclaredIn>CWWebApplication.h</DeclaredIn>
			
			<Declaration>- (void)launchWithDocumentRoot:(NSString *)documentRoot onWebview:(UIWebView *)webView</Declaration>
			<Parameters>
				<Parameter>
					<Name>documentRoot</Name>
					<Abstract type="html">See launchWithDocumentRoot:onWebview:port:</Abstract>
				</Parameter><Parameter>
					<Name>webView</Name>
					<Abstract type="html">See launchWithDocumentRoot:onWebview:port:</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/launchWithDocumentRoot:onWebview:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/setRemoteWebView:</TokenIdentifier>
			<Abstract type="html">Sets the webview on which this device will connect as a remote to other device if requested by them. Must be a webview that is not used for anything else. Connichiwa will set the delegate of the view.</Abstract>
			<DeclaredIn>CWWebApplication.h</DeclaredIn>
			
			<Declaration>- (void)setRemoteWebView:(UIWebView *)remoteWebView</Declaration>
			<Parameters>
				<Parameter>
					<Name>remoteWebView</Name>
					<Abstract type="html">The UIWebView to use</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setRemoteWebView:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/applicationWillResignActive</TokenIdentifier>
			<Abstract type="html">This method MUST be called by the iOS application when UIApplicationDelegate&apos;s applicationWillResignActive: is triggered</Abstract>
			<DeclaredIn>CWWebApplication.h</DeclaredIn>
			
			<Declaration>- (void)applicationWillResignActive</Declaration>
			
			
			<Anchor>//api/name/applicationWillResignActive</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/applicationDidEnterBackground</TokenIdentifier>
			<Abstract type="html">This method MUST be called by the iOS application when UIApplicationDelegate&apos;s applicationWillEnterBackground: is triggered</Abstract>
			<DeclaredIn>CWWebApplication.h</DeclaredIn>
			
			<Declaration>- (void)applicationDidEnterBackground</Declaration>
			
			
			<Anchor>//api/name/applicationDidEnterBackground</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/applicationWillEnterForeground</TokenIdentifier>
			<Abstract type="html">This method MUST be called by the iOS application when UIApplicationDelegate&apos;s applicationWillEnterForeground: is triggered</Abstract>
			<DeclaredIn>CWWebApplication.h</DeclaredIn>
			
			<Declaration>- (void)applicationWillEnterForeground</Declaration>
			
			
			<Anchor>//api/name/applicationWillEnterForeground</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/applicationDidBecomeActive</TokenIdentifier>
			<Abstract type="html">This method MUST be called by the iOS application when UIApplicationDelegate&apos;s applicationDidBecomeActive: is triggered</Abstract>
			<DeclaredIn>CWWebApplication.h</DeclaredIn>
			
			<Declaration>- (void)applicationDidBecomeActive</Declaration>
			
			
			<Anchor>//api/name/applicationDidBecomeActive</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/applicationWillTerminate</TokenIdentifier>
			<Abstract type="html">This method MUST be called by the iOS application when UIApplicationDelegate&apos;s applicationWillTerminate: is triggered</Abstract>
			<DeclaredIn>CWWebApplication.h</DeclaredIn>
			
			<Declaration>- (void)applicationWillTerminate</Declaration>
			
			
			<Anchor>//api/name/applicationWillTerminate</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CWWebApplication/logLevel</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CWWebApplication.h</DeclaredIn>
			
			<Declaration>+ (int)logLevel</Declaration>
			
			
			<Anchor>//api/name/logLevel</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CWWebApplication/setLogLevel:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CWWebApplication.h</DeclaredIn>
			
			<Declaration>+ (void)setLogLevel:(int)v</Declaration>
			
			
			<Anchor>//api/name/setLogLevel:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/init</TokenIdentifier>
			<Abstract type="html">Initializes a new CWWebApplication instance. It is not advised to have multiple CWWebApplication instances at the same time</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (instancetype)init</Declaration>
			
			<ReturnValue><Abstract type="html">A new instance of CWWebApplication</Abstract></ReturnValue>
			<Anchor>//api/name/init</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/proximitySensorStateChanged</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (void)proximitySensorStateChanged</Declaration>
			
			
			<Anchor>//api/name/proximitySensorStateChanged</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/remoteDeviceConnectionTimeout:</TokenIdentifier>
			<Abstract type="html">Called when the timer that waits for a remote device to connect via websocket expires. If the device did not establish a websocket connection by the time this is called, it usually means something went wrong and we can consider the device connection as a failure.</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (void)remoteDeviceConnectionTimeout:(NSString *)deviceIdentifier</Declaration>
			<Parameters>
				<Parameter>
					<Name>deviceIdentifier</Name>
					<Abstract type="html">The identifier of the device where the timer expires</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/remoteDeviceConnectionTimeout:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/cleanupBackgroundTaskTimeout</TokenIdentifier>
			<Abstract type="html">Called when the device was when the device-sent-to-background cleanup task timed out</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (void)cleanupBackgroundTaskTimeout</Declaration>
			
			
			<Anchor>//api/name/cleanupBackgroundTaskTimeout</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/ppi</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (int)ppi</Declaration>
			
			
			<Anchor>//api/name/ppi</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/deviceInfo</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (NSDictionary *)deviceInfo</Declaration>
			
			
			<Anchor>//api/name/deviceInfo</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/isWebserverRunning</TokenIdentifier>
			<Abstract type="html">See [CWWebApplicationState isWebserverRunning]</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (BOOL)isWebserverRunning</Declaration>
			
			<ReturnValue><Abstract type="html">See [CWWebApplicationState isWebserverRunning]</Abstract></ReturnValue>
			<Anchor>//api/name/isWebserverRunning</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/isRemote</TokenIdentifier>
			<Abstract type="html">See [CWWebApplicationState isRemote]</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (BOOL)isRemote</Declaration>
			
			<ReturnValue><Abstract type="html">See [CWWebApplicationState isRemote]</Abstract></ReturnValue>
			<Anchor>//api/name/isRemote</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/canBecomeRemote</TokenIdentifier>
			<Abstract type="html">See [CWWebApplicationState canBecomeRemote]</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (BOOL)canBecomeRemote</Declaration>
			
			<ReturnValue><Abstract type="html">See [CWWebApplicationState canBecomeRemote]</Abstract></ReturnValue>
			<Anchor>//api/name/canBecomeRemote</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/webLibraryIsReady</TokenIdentifier>
			<Abstract type="html">See [CWWebLibraryManagerDelegate webLibraryIsReady]</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (void)webLibraryIsReady</Declaration>
			
			
			<Anchor>//api/name/webLibraryIsReady</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/didReceiveConnectionRequestForRemote:</TokenIdentifier>
			<Abstract type="html">See [CWWebLibraryManagerDelegate didReceiveConnectionRequestForRemote:]</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (void)didReceiveConnectionRequestForRemote:(NSString *)identifier</Declaration>
			<Parameters>
				<Parameter>
					<Name>identifier</Name>
					<Abstract type="html">See [CWWebLibraryManagerDelegate didReceiveConnectionRequestForRemote:]</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/didReceiveConnectionRequestForRemote:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/remoteDidConnect:</TokenIdentifier>
			<Abstract type="html">See [CWWebLibraryManagerDelegate remoteDidConnect:]</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (void)remoteDidConnect:(NSString *)identifier</Declaration>
			<Parameters>
				<Parameter>
					<Name>identifier</Name>
					<Abstract type="html">See [CWWebLibraryManagerDelegate remoteDidConnect:]</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/remoteDidConnect:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/webLibraryRequestsProximityTrackingStart</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (void)webLibraryRequestsProximityTrackingStart</Declaration>
			
			
			<Anchor>//api/name/webLibraryRequestsProximityTrackingStart</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/webLibraryRequestsProximityTrackingStop</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (void)webLibraryRequestsProximityTrackingStop</Declaration>
			
			
			<Anchor>//api/name/webLibraryRequestsProximityTrackingStop</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/remoteLibraryRequestsProximityTrackingStart</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (void)remoteLibraryRequestsProximityTrackingStart</Declaration>
			
			
			<Anchor>//api/name/remoteLibraryRequestsProximityTrackingStart</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/remoteLibraryRequestsProximityTrackingStop</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (void)remoteLibraryRequestsProximityTrackingStop</Declaration>
			
			
			<Anchor>//api/name/remoteLibraryRequestsProximityTrackingStop</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/didStartWebserver</TokenIdentifier>
			<Abstract type="html">See [CWWebserverManagerDelegate didStartWebserver]</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (void)didStartWebserver</Declaration>
			
			
			<Anchor>//api/name/didStartWebserver</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/remoteDidDisconnect:</TokenIdentifier>
			<Abstract type="html">See [CWWebserverManagerDelegate remoteDidDisconnect:]</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (void)remoteDidDisconnect:(NSString *)identifier</Declaration>
			<Parameters>
				<Parameter>
					<Name>identifier</Name>
					<Abstract type="html">See [CWWebserverManagerDelegate remoteDidDisconnect:]</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/remoteDidDisconnect:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/deviceDetected:information:</TokenIdentifier>
			<Abstract type="html">See [CWBluetoothManagerDelegate deviceDetected:]</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (void)deviceDetected:(NSString *)identifier information:(NSDictionary *)deviceInfo</Declaration>
			<Parameters>
				<Parameter>
					<Name>identifier</Name>
					<Abstract type="html">See [CWBluetoothManagerDelegate deviceDetected:]</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deviceDetected:information:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/device:changedDistance:</TokenIdentifier>
			<Abstract type="html">See [CWBluetoothManagerDelegate device:changedDistance:]</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (void)device:(NSString *)identifier changedDistance:(double)distance</Declaration>
			<Parameters>
				<Parameter>
					<Name>identifier</Name>
					<Abstract type="html">See [CWBluetoothManagerDelegate device:changedDistance:]</Abstract>
				</Parameter><Parameter>
					<Name>distance</Name>
					<Abstract type="html">See [CWBluetoothManagerDelegate device:changedDistance:]</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/device:changedDistance:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/deviceLost:</TokenIdentifier>
			<Abstract type="html">See [CWBluetoothManagerDelegate deviceLost:]</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (void)deviceLost:(NSString *)identifier</Declaration>
			<Parameters>
				<Parameter>
					<Name>identifier</Name>
					<Abstract type="html">See [CWBluetoothManagerDelegate deviceLost:]</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deviceLost:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/didReceiveDeviceURL:</TokenIdentifier>
			<Abstract type="html">See [CWBluetoothManagerDelegate didReceiveDeviceURL:]</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (void)didReceiveDeviceURL:(NSURL *)URL</Declaration>
			<Parameters>
				<Parameter>
					<Name>URL</Name>
					<Abstract type="html">See [CWBluetoothManagerDelegate didReceiveDeviceURL:]</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/didReceiveDeviceURL:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/didSendNetworkAddresses:success:</TokenIdentifier>
			<Abstract type="html">See [CWBluetoothManagerDelegate didSendNetworkAddresses:success:]</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (void)didSendNetworkAddresses:(NSString *)deviceIdentifier success:(BOOL)success</Declaration>
			<Parameters>
				<Parameter>
					<Name>deviceIdentifier</Name>
					<Abstract type="html">See [CWBluetoothManagerDelegate didSendNetworkAddresses:success:]</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">See [CWBluetoothManagerDelegate didSendNetworkAddresses:success:]</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/didSendNetworkAddresses:success:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/proximityStateChanged:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>- (void)proximityStateChanged:(BOOL)proximityState</Declaration>
			
			
			<Anchor>//api/name/proximityStateChanged:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/setIdentifier:</TokenIdentifier>
			<Abstract type="html">The unique identifier of this device that is used amongst all the different parts of Connichiwa</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) NSString *identifier</Declaration>
			
			
			<Anchor>//api/name/identifier</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/identifier</TokenIdentifier>
			<Abstract type="html">The unique identifier of this device that is used amongst all the different parts of Connichiwa</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) NSString *identifier</Declaration>
			
			
			<Anchor>//api/name/identifier</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CWWebApplication/identifier</TokenIdentifier>
			<Abstract type="html">The unique identifier of this device that is used amongst all the different parts of Connichiwa</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) NSString *identifier</Declaration>
			
			
			<Anchor>//api/name/identifier</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/setLaunchDate:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) NSDate *launchDate</Declaration>
			
			
			<Anchor>//api/name/launchDate</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/launchDate</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) NSDate *launchDate</Declaration>
			
			
			<Anchor>//api/name/launchDate</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CWWebApplication/launchDate</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) NSDate *launchDate</Declaration>
			
			
			<Anchor>//api/name/launchDate</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/setWebserverPort:</TokenIdentifier>
			<Abstract type="html">The port the webserver will run on</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite) int webserverPort</Declaration>
			
			
			<Anchor>//api/name/webserverPort</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/webserverPort</TokenIdentifier>
			<Abstract type="html">The port the webserver will run on</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite) int webserverPort</Declaration>
			
			
			<Anchor>//api/name/webserverPort</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CWWebApplication/webserverPort</TokenIdentifier>
			<Abstract type="html">The port the webserver will run on</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite) int webserverPort</Declaration>
			
			
			<Anchor>//api/name/webserverPort</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/setWebLibManager:</TokenIdentifier>
			<Abstract type="html">The main instance of CWWebLibraryManager. Runs the actual web application, the web library and forwards and receives messages from the web library</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) CWWebLibraryManager *webLibManager</Declaration>
			
			
			<Anchor>//api/name/webLibManager</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/webLibManager</TokenIdentifier>
			<Abstract type="html">The main instance of CWWebLibraryManager. Runs the actual web application, the web library and forwards and receives messages from the web library</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) CWWebLibraryManager *webLibManager</Declaration>
			
			
			<Anchor>//api/name/webLibManager</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CWWebApplication/webLibManager</TokenIdentifier>
			<Abstract type="html">The main instance of CWWebLibraryManager. Runs the actual web application, the web library and forwards and receives messages from the web library</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) CWWebLibraryManager *webLibManager</Declaration>
			
			
			<Anchor>//api/name/webLibManager</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/setRemoteLibManager:</TokenIdentifier>
			<Abstract type="html">The main instance of CWRemoteLibraryManager. Runs the remote library if the device is used as a remote by another Connichiwa device. Also forwards and receives messages from the remote library</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) CWRemoteLibraryManager *remoteLibManager</Declaration>
			
			
			<Anchor>//api/name/remoteLibManager</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/remoteLibManager</TokenIdentifier>
			<Abstract type="html">The main instance of CWRemoteLibraryManager. Runs the remote library if the device is used as a remote by another Connichiwa device. Also forwards and receives messages from the remote library</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) CWRemoteLibraryManager *remoteLibManager</Declaration>
			
			
			<Anchor>//api/name/remoteLibManager</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CWWebApplication/remoteLibManager</TokenIdentifier>
			<Abstract type="html">The main instance of CWRemoteLibraryManager. Runs the remote library if the device is used as a remote by another Connichiwa device. Also forwards and receives messages from the remote library</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) CWRemoteLibraryManager *remoteLibManager</Declaration>
			
			
			<Anchor>//api/name/remoteLibManager</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/setWebserverManager:</TokenIdentifier>
			<Abstract type="html">The main instance of CWWebserverManager. Runs the local webserver and forwards and receives messages from it</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) CWServerManager *webserverManager</Declaration>
			
			
			<Anchor>//api/name/webserverManager</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/webserverManager</TokenIdentifier>
			<Abstract type="html">The main instance of CWWebserverManager. Runs the local webserver and forwards and receives messages from it</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) CWServerManager *webserverManager</Declaration>
			
			
			<Anchor>//api/name/webserverManager</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CWWebApplication/webserverManager</TokenIdentifier>
			<Abstract type="html">The main instance of CWWebserverManager. Runs the local webserver and forwards and receives messages from it</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) CWServerManager *webserverManager</Declaration>
			
			
			<Anchor>//api/name/webserverManager</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/setBluetoothManager:</TokenIdentifier>
			<Abstract type="html">The main instance of CWBluetoothManager. Advertises this device via BT, looks for other BT devices and allows for data exchange with other BT devices.</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) CWBluetoothManager *bluetoothManager</Declaration>
			
			
			<Anchor>//api/name/bluetoothManager</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/bluetoothManager</TokenIdentifier>
			<Abstract type="html">The main instance of CWBluetoothManager. Advertises this device via BT, looks for other BT devices and allows for data exchange with other BT devices.</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) CWBluetoothManager *bluetoothManager</Declaration>
			
			
			<Anchor>//api/name/bluetoothManager</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CWWebApplication/bluetoothManager</TokenIdentifier>
			<Abstract type="html">The main instance of CWBluetoothManager. Advertises this device via BT, looks for other BT devices and allows for data exchange with other BT devices.</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) CWBluetoothManager *bluetoothManager</Declaration>
			
			
			<Anchor>//api/name/bluetoothManager</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/setProximityManager:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) CWProximityManager *proximityManager</Declaration>
			
			
			<Anchor>//api/name/proximityManager</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/proximityManager</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) CWProximityManager *proximityManager</Declaration>
			
			
			<Anchor>//api/name/proximityManager</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CWWebApplication/proximityManager</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) CWProximityManager *proximityManager</Declaration>
			
			
			<Anchor>//api/name/proximityManager</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/setLocalWebView:</TokenIdentifier>
			<Abstract type="html">The local UIWebView where the web application will be displayed on</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) UIWebView *localWebView</Declaration>
			
			
			<Anchor>//api/name/localWebView</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/localWebView</TokenIdentifier>
			<Abstract type="html">The local UIWebView where the web application will be displayed on</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) UIWebView *localWebView</Declaration>
			
			
			<Anchor>//api/name/localWebView</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CWWebApplication/localWebView</TokenIdentifier>
			<Abstract type="html">The local UIWebView where the web application will be displayed on</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) UIWebView *localWebView</Declaration>
			
			
			<Anchor>//api/name/localWebView</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/setPendingRemoteDevices:</TokenIdentifier>
			<Abstract type="html">Contains a list of of devices that we currently try to connect to in order to use them as remote devices. Each entry is a device identifier.</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite) NSMutableArray *pendingRemoteDevices</Declaration>
			
			
			<Anchor>//api/name/pendingRemoteDevices</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/pendingRemoteDevices</TokenIdentifier>
			<Abstract type="html">Contains a list of of devices that we currently try to connect to in order to use them as remote devices. Each entry is a device identifier.</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite) NSMutableArray *pendingRemoteDevices</Declaration>
			
			
			<Anchor>//api/name/pendingRemoteDevices</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CWWebApplication/pendingRemoteDevices</TokenIdentifier>
			<Abstract type="html">Contains a list of of devices that we currently try to connect to in order to use them as remote devices. Each entry is a device identifier.</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite) NSMutableArray *pendingRemoteDevices</Declaration>
			
			
			<Anchor>//api/name/pendingRemoteDevices</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/setRemoteDevices:</TokenIdentifier>
			<Abstract type="html">Contains a list of devices that are currently used as remote devices. Each entry is a device identifier.</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) NSMutableArray *remoteDevices</Declaration>
			
			
			<Anchor>//api/name/remoteDevices</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/remoteDevices</TokenIdentifier>
			<Abstract type="html">Contains a list of devices that are currently used as remote devices. Each entry is a device identifier.</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) NSMutableArray *remoteDevices</Declaration>
			
			
			<Anchor>//api/name/remoteDevices</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CWWebApplication/remoteDevices</TokenIdentifier>
			<Abstract type="html">Contains a list of devices that are currently used as remote devices. Each entry is a device identifier.</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) NSMutableArray *remoteDevices</Declaration>
			
			
			<Anchor>//api/name/remoteDevices</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/setCleanupBackgroundTaskIdentifier:</TokenIdentifier>
			<Abstract type="html">Identifier for the cleanup task that is started when this device is sent to the background</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite) UIBackgroundTaskIdentifier cleanupBackgroundTaskIdentifier</Declaration>
			
			
			<Anchor>//api/name/cleanupBackgroundTaskIdentifier</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebApplication/cleanupBackgroundTaskIdentifier</TokenIdentifier>
			<Abstract type="html">Identifier for the cleanup task that is started when this device is sent to the background</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite) UIBackgroundTaskIdentifier cleanupBackgroundTaskIdentifier</Declaration>
			
			
			<Anchor>//api/name/cleanupBackgroundTaskIdentifier</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CWWebApplication/cleanupBackgroundTaskIdentifier</TokenIdentifier>
			<Abstract type="html">Identifier for the cleanup task that is started when this device is sent to the background</Abstract>
			<DeclaredIn>CWWebApplication.m</DeclaredIn>
			
			<Declaration>@property (readwrite) UIBackgroundTaskIdentifier cleanupBackgroundTaskIdentifier</Declaration>
			
			
			<Anchor>//api/name/cleanupBackgroundTaskIdentifier</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
        
	</File>
</Tokens>