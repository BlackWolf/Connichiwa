<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CWWebserver.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CWWebserver</TokenIdentifier>
			<Abstract type="html">The CWWebserver class represents the local webserver run by Connichiwa in order to run local web applications.
It is responsible for launching and managing the webserver and acts as a bridge between Objective-C and the server, sending and receiving messages from it over the Connichiwa Communication Protocol (Native Layer).
Only one instance of the webserver should be running on a device.</Abstract>
			<DeclaredIn>CWWebserver.h</DeclaredIn>
            
			
			<NodeRef refid="7"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebserver/setDelegate:</TokenIdentifier>
			<Abstract type="html">The delegate to receive events send by CWWebserver</Abstract>
			<DeclaredIn>CWWebserver.h</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) id&lt;CWWebserverDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebserver/delegate</TokenIdentifier>
			<Abstract type="html">The delegate to receive events send by CWWebserver</Abstract>
			<DeclaredIn>CWWebserver.h</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) id&lt;CWWebserverDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CWWebserver/delegate</TokenIdentifier>
			<Abstract type="html">The delegate to receive events send by CWWebserver</Abstract>
			<DeclaredIn>CWWebserver.h</DeclaredIn>
			
			<Declaration>@property (readwrite, strong) id&lt;CWWebserverDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebserver/setDocumentRoot:</TokenIdentifier>
			<Abstract type="html">Path to the folder acting as the root of the web server. &apos;/&apos; on the web server will be mapped to this path.</Abstract>
			<DeclaredIn>CWWebserver.h</DeclaredIn>
			
			<Declaration>@property (readonly) NSString *documentRoot</Declaration>
			
			
			<Anchor>//api/name/documentRoot</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebserver/documentRoot</TokenIdentifier>
			<Abstract type="html">Path to the folder acting as the root of the web server. &apos;/&apos; on the web server will be mapped to this path.</Abstract>
			<DeclaredIn>CWWebserver.h</DeclaredIn>
			
			<Declaration>@property (readonly) NSString *documentRoot</Declaration>
			
			
			<Anchor>//api/name/documentRoot</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CWWebserver/documentRoot</TokenIdentifier>
			<Abstract type="html">Path to the folder acting as the root of the web server. &apos;/&apos; on the web server will be mapped to this path.</Abstract>
			<DeclaredIn>CWWebserver.h</DeclaredIn>
			
			<Declaration>@property (readonly) NSString *documentRoot</Declaration>
			
			
			<Anchor>//api/name/documentRoot</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebserver/startWithDocumentRoot:</TokenIdentifier>
			<Abstract type="html">Launch the webserver with the given document root.</Abstract>
			<DeclaredIn>CWWebserver.h</DeclaredIn>
			
			<Declaration>- (void)startWithDocumentRoot:(NSString *)documentRoot</Declaration>
			<Parameters>
				<Parameter>
					<Name>documentRoot</Name>
					<Abstract type="html">A path that will be mapped to the root path of the web server. Your web application should be there.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startWithDocumentRoot:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebserver/sendLocalID:</TokenIdentifier>
			<Abstract type="html">Sends a message to the web application with the ID this device is advertised under</Abstract>
			<DeclaredIn>CWWebserver.h</DeclaredIn>
			
			<Declaration>- (void)sendLocalID:(CWDeviceID *)ID</Declaration>
			<Parameters>
				<Parameter>
					<Name>ID</Name>
					<Abstract type="html">The ID of this device</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sendLocalID:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebserver/sendNewBeaconWithID:inProximity:</TokenIdentifier>
			<Abstract type="html">Sends a message to the web application and informs it of a new device detected nearby</Abstract>
			<DeclaredIn>CWWebserver.h</DeclaredIn>
			
			<Declaration>- (void)sendNewBeaconWithID:(CWDeviceID *)ID inProximity:(NSString *)proximity</Declaration>
			<Parameters>
				<Parameter>
					<Name>ID</Name>
					<Abstract type="html">The ID of the detected device</Abstract>
				</Parameter><Parameter>
					<Name>proximity</Name>
					<Abstract type="html">A string describing the distance between this device and the detected device</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sendNewBeaconWithID:inProximity:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebserver/sendBeaconWithID:newProximity:</TokenIdentifier>
			<Abstract type="html">Sends a message to the web application and informs it of a change of the proximity of a device nearby</Abstract>
			<DeclaredIn>CWWebserver.h</DeclaredIn>
			
			<Declaration>- (void)sendBeaconWithID:(CWDeviceID *)ID newProximity:(NSString *)proximity</Declaration>
			<Parameters>
				<Parameter>
					<Name>ID</Name>
					<Abstract type="html">The ID of the device that changed</Abstract>
				</Parameter><Parameter>
					<Name>proximity</Name>
					<Abstract type="html">A string describing the new distance between this device and the detected device</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sendBeaconWithID:newProximity:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebserver/sendLostBeaconWithID:</TokenIdentifier>
			<Abstract type="html">Sends a message to the web application and informs it of a nearby device that was lost</Abstract>
			<DeclaredIn>CWWebserver.h</DeclaredIn>
			
			<Declaration>- (void)sendLostBeaconWithID:(CWDeviceID *)ID</Declaration>
			<Parameters>
				<Parameter>
					<Name>ID</Name>
					<Abstract type="html">The ID of the lost device</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sendLostBeaconWithID:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebserver/_sendToWeblib:</TokenIdentifier>
			<Abstract type="html">Sends the given message to the web library through the Nodelike server.</Abstract>
			<DeclaredIn>CWWebserver.m</DeclaredIn>
			
			<Declaration>- (void)_sendToWeblib:(NSString *)message</Declaration>
			<Parameters>
				<Parameter>
					<Name>message</Name>
					<Abstract type="html">The message to send to the web library.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/_sendToWeblib:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebserver/_JSONFromDictionary:</TokenIdentifier>
			<Abstract type="html">Creates a JSON string from a NSDictionary that can be safely send over JavaScriptCore&apos;s evaluteScript:.
The dictionary must be convertable to JSON as defined by NSJSONSerialization</Abstract>
			<DeclaredIn>CWWebserver.m</DeclaredIn>
			
			<Declaration>- (NSString *)_JSONFromDictionary:(NSDictionary *)dictionary</Declaration>
			<Parameters>
				<Parameter>
					<Name>dictionary</Name>
					<Abstract type="html">The dictionary to translate into JSON</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The JSON string representing the Dictionary.</Abstract></ReturnValue>
			<Anchor>//api/name/_JSONFromDictionary:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebserver/_registerWebserverCallbacks</TokenIdentifier>
			<Abstract type="html">Registers the functions in Javascript that call native methods (and therefore allow the webserver to send messages to the native layer)</Abstract>
			<DeclaredIn>CWWebserver.m</DeclaredIn>
			
			<Declaration>- (void)_registerWebserverCallbacks</Declaration>
			
			
			<Anchor>//api/name/_registerWebserverCallbacks</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebserver/localWebsocketWasOpened</TokenIdentifier>
			<Abstract type="html">Called by the webserver when the websocket connection to the local web view was established successfully</Abstract>
			<DeclaredIn>CWWebserver.m</DeclaredIn>
			
			<Declaration>- (void)localWebsocketWasOpened</Declaration>
			
			
			<Anchor>//api/name/localWebsocketWasOpened</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebserver/setNodelikeContext:</TokenIdentifier>
			<Abstract type="html">A Nodelike-specific subclass of JSContext that is used to execute code and for communication between Objective-C and the Nodelike server</Abstract>
			<DeclaredIn>CWWebserver.m</DeclaredIn>
			
			<Declaration>@property (strong, readwrite) NLContext *nodelikeContext</Declaration>
			
			
			<Anchor>//api/name/nodelikeContext</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CWWebserver/nodelikeContext</TokenIdentifier>
			<Abstract type="html">A Nodelike-specific subclass of JSContext that is used to execute code and for communication between Objective-C and the Nodelike server</Abstract>
			<DeclaredIn>CWWebserver.m</DeclaredIn>
			
			<Declaration>@property (strong, readwrite) NLContext *nodelikeContext</Declaration>
			
			
			<Anchor>//api/name/nodelikeContext</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CWWebserver/nodelikeContext</TokenIdentifier>
			<Abstract type="html">A Nodelike-specific subclass of JSContext that is used to execute code and for communication between Objective-C and the Nodelike server</Abstract>
			<DeclaredIn>CWWebserver.m</DeclaredIn>
			
			<Declaration>@property (strong, readwrite) NLContext *nodelikeContext</Declaration>
			
			
			<Anchor>//api/name/nodelikeContext</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
        
	</File>
</Tokens>