"use strict";function CRURLParser(url){var parser=document.createElement("a");return parser.href=url,parser}var CRDebug=function(){var debug=!1,enableDebug=function(){debug=!0},log=function(priority,message){debug&&console.log(priority+"|"+message)};return{enableDebug:enableDebug,log:log}}(),CREventManager=function(){var _events={},register=function(event,callback){if("string"!=typeof event)throw"Event name must be a string";if("function"!=typeof callback)throw"Event callback must be a function";_events[event]||(_events[event]=[]),_events[event].push(callback),CRDebug.log(3,"Attached callback to "+event)},trigger=function(event){if(_events[event]){var args=Array.prototype.slice.call(arguments);args.shift(),CRDebug.log(5,"Triggering event "+event);for(var i=0;_events[event].length>i;i++){var callback=_events[event][i];callback.apply(null,args)}}};return{register:register,trigger:trigger}}(),CRMasterCommunicationParser=function(){var parse=function(message){"softdisconnect"===message.type&&Remote._softDisconnectWebsocket(),"show"===message.type&&window.requestAnimationFrame(function(){$("body").append(message.content)}),"update"===message.type&&window.requestAnimationFrame(function(){$(message.element).html(message.content)}),"beginPath"===message.type&&window.requestAnimationFrame(function(){var context=$(message.element)[0].getContext("2d");context.beginPath(),context.moveTo(message.coords.x,message.coords.y)}),"updatePath"===message.type&&window.requestAnimationFrame(function(){var context=$(message.element)[0].getContext("2d");context.lineTo(message.coords.x,message.coords.y),context.stroke()}),"endPath"===message.type&&window.requestAnimationFrame(function(){var context=$(message.element)[0].getContext("2d");context.closePath()}),"loadScript"===message.type&&$.getScript(message.url,function(){var message={type:"scriptLoaded",request:message};Remote.send(message)})};return{parse:parse}}(),CRNativeCommunicationParser=function(){var parse=function(message){CRDebug.log(4,"Parsing native message: "+message);var object=JSON.parse(message);switch(object.type){case"connectwebsocket":_parseConnectWebsocket(object);break;case"cwdebug":_parseDebug(object);break;case"remoteidentifier":_parseRemoteIdentifier(object);break;case"disconnectwebsocket":_parseDisconnectWebsocket(object)}},_parseConnectWebsocket=function(){Remote._connectWebsocket()},_parseDebug=function(){CRDebug.enableDebug()},_parseRemoteIdentifier=function(message){var data={type:"remoteidentifier",identifier:message.identifier};Remote.send(data)},_parseDisconnectWebsocket=function(){Remote._disconnectWebsocket()};return{parse:parse}}(),Remote=function(){function _cleanupWebsocket(){void 0!==_websocket&&(_websocket.onopen=void 0,_websocket.onmessage=void 0,_websocket.onclose=void 0,_websocket.onerror=void 0,_websocket=void 0)}var _websocket,_parsedURL=new CRURLParser(document.URL),softDisconnected=!1,_connectWebsocket=function(){var oldWebsocket=_websocket;_cleanupWebsocket(),void 0!==oldWebsocket&&oldWebsocket.close(),_websocket=new WebSocket("ws://"+_parsedURL.hostname+":"+(parseInt(_parsedURL.port)+1)),_websocket.onopen=onWebsocketOpen,_websocket.onmessage=onWebsocketMessage,_websocket.onclose=onWebsocketClose,_websocket.onerror=onWebsocketError},_disconnectWebsocket=function(){_websocket.close()},_softDisconnectWebsocket=function(){softDisconnected=!0,nativeCallSoftDisconnect()},onWebsocketOpen=function(){CRDebug.log(3,"Websocket opened"),softDisconnected=!1,nativeCallWebsocketDidOpen()},onWebsocketMessage=function(e){var message=JSON.parse(e.data);CRDebug.log(4,"Received message: "+e.data),CRMasterCommunicationParser.parse(message),message.type&&CREventManager.trigger("message"+message.type,message)},onWebsocketClose=function(){CRDebug.log(3,"Websocket closed"),_cleanupWebsocket(),nativeCallWebsocketDidClose()},onWebsocketError=function(){onWebsocketClose()},_send=function(message){CRDebug.log(4,"Sending message: "+message),_websocket.send(message)},send=function(messageObject){_send(JSON.stringify(messageObject))},onMessage=function(type,callback){CREventManager.register("message"+type,callback)};return{_connectWebsocket:_connectWebsocket,_softDisconnectWebsocket:_softDisconnectWebsocket,_disconnectWebsocket:_disconnectWebsocket,send:send,onMessage:onMessage}}();