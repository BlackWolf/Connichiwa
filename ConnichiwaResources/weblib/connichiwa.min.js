"use strict";function CWDevice(properties){if(!properties.identifier)throw"Cannot instantiate CWDevice without an identifier";this.discoveryState=CWDeviceDiscoveryState.DISCOVERED,this.connectionState=CWDeviceConnectionState.DISCONNECTED,this.distance=-1,this.name="unknown",properties.name&&(this.name=properties.name);var _identifier=properties.identifier;return this.getIdentifier=function(){return _identifier},this.isNearby=function(){return this.discoveryState===CWDeviceDiscoveryState.DISCOVERED},this.canBeConnected=function(){return this.connectionState===CWDeviceConnectionState.DISCONNECTED&&this.discoveryState===CWDeviceDiscoveryState.DISCOVERED},this.isConnected=function(){return this.connectionState===CWDeviceConnectionState.CONNECTED},this}var CWDebug=function(){var debug=!1,enableDebug=function(){debug=!0},log=function(priority,message){debug&&console.log(priority+"|"+message)};return{enableDebug:enableDebug,log:log}}(),CWDeviceDiscoveryState={DISCOVERED:"discovered",LOST:"lost"},CWDeviceConnectionState={DISCONNECTED:"disconnected",CONNECTING:"connecting",CONNECTED:"connected"};CWDevice.prototype.send=function(message){Connichiwa.send(this,message)},CWDevice.prototype.equalTo=function(object){return CWDevice.prototype.isPrototypeOf(object)===!1?!1:this.getIdentifier()===object.getIdentifier()},CWDevice.prototype.toString=function(){return this.getIdentifier()};var CWDeviceManager=function(){var _remoteDevices=[],addDevice=function(newDevice){if(CWDevice.prototype.isPrototypeOf(newDevice)===!1)throw"Cannot add a non-device";return null!==getDeviceWithIdentifier(newDevice.getIdentifier())?!1:(CWDebug.log(3,"Added device: "+newDevice.getIdentifier()),_remoteDevices.push(newDevice),!0)},removeDevice=function(identifier){CWDevice.prototype.isPrototypeOf(identifier)===!0&&(identifier=identifier.getIdentifier());var device=getDeviceWithIdentifier(identifier);if(null===device)return!1;CWDebug.log("Removed device: "+identifier);var index=_remoteDevices.indexOf(device);return _remoteDevices.splice(index,1),!0},getDeviceWithIdentifier=function(identifier){for(var i=0;_remoteDevices.length>i;i++){var remoteDevice=_remoteDevices[i];if(remoteDevice.getIdentifier()===identifier)return remoteDevice}return null};return{addDevice:addDevice,removeDevice:removeDevice,getDeviceWithIdentifier:getDeviceWithIdentifier}}(),CWEventManager=function(){var _events={},register=function(event,callback){if("string"!=typeof event)throw"Event name must be a string";if("function"!=typeof callback)throw"Event callback must be a function";_events[event]||(_events[event]=[]),_events[event].push(callback),CWDebug.log(3,"Attached callback to "+event)},trigger=function(event){if(_events[event]){var args=Array.prototype.slice.call(arguments);args.shift(),CWDebug.log(5,"Triggering event "+event);for(var i=0;_events[event].length>i;i++){var callback=_events[event][i];callback.apply(null,args)}}};return{register:register,trigger:trigger}}(),CWNativeCommunicationParser=function(){var parse=function(message){CWDebug.log(4,"Parsing native message: "+message);var object=JSON.parse(message);switch(object.type){case"connectwebsocket":_parseConnectWebsocket(object);break;case"cwdebug":_parseDebug(object);break;case"localidentifier":_parseLocalIdentifier(object);break;case"devicedetected":_parseDeviceDetected(object);break;case"devicedistancechanged":_parseDeviceDistanceChanged(object);break;case"devicelost":_parseDeviceLost(object);break;case"remoteconnectfailed":_parseRemoteConnectFailed(object);break;case"remotedisconnected":_parseRemoteDisconnected(object);break;case"disconnectwebsocket":_parseDisconnectWebsocket(object)}},_parseConnectWebsocket=function(){Connichiwa._connectWebsocket()},_parseDebug=function(message){message.cwdebug&&CWDebug.enableDebug()},_parseLocalIdentifier=function(message){var success=Connichiwa._setIdentifier(message.identifier);success&&(Connichiwa._send(JSON.stringify(message)),CWEventManager.trigger("ready"))},_parseDeviceDetected=function(message){var device=CWDeviceManager.getDeviceWithIdentifier(message.identifier);null===device&&(device=new CWDevice(message),CWDeviceManager.addDevice(device)),device.discoveryState=CWDeviceDiscoveryState.DISCOVERED,CWDebug.log(2,"Detected device: "+device.getIdentifier()),CWEventManager.trigger("deviceDetected",device)},_parseDeviceDistanceChanged=function(message){var device=CWDeviceManager.getDeviceWithIdentifier(message.identifier);null!==device&&(device.distance=message.distance,CWDebug.log(5,"Updated distance of device "+device.getIdentifier()+" to "+device.distance),CWEventManager.trigger("deviceDistanceChanged",device))},_parseDeviceLost=function(message){var device=CWDeviceManager.getDeviceWithIdentifier(message.identifier);device.discoveryState=CWDeviceDiscoveryState.LOST,CWDebug.log(2,"Lost device: "+device.getIdentifier()),CWEventManager.trigger("deviceLost",device)},_parseRemoteConnectFailed=function(message){var device=CWDeviceManager.getDeviceWithIdentifier(message.identifier);device.connectionState=CWDeviceConnectionState.DISCONNECTED,CWDebug.log(2,"Connection to remote device failed: "+device.getIdentifier()),CWEventManager.trigger("connectFailed",device)},_parseRemoteDisconnected=function(message){var device=CWDeviceManager.getDeviceWithIdentifier(message.identifier);null!==device&&(device.connectionState=CWDeviceConnectionState.DISCONNECTED,CWDebug.log(2,"Device disconnected: "+device.getIdentifier()),CWEventManager.trigger("deviceDisconnected",device))},_parseDisconnectWebsocket=function(){Connichiwa._disconnectWebsocket()};return{parse:parse}}(),CWRemoteCommunicationParser=function(){var parse=function(message){CWDebug.log(4,"Parsing remote message: "+message);var object=JSON.parse(message);switch(object.type){case"remoteidentifier":_parseRemoteIdentifier(object)}},_parseRemoteIdentifier=function(message){var device=CWDeviceManager.getDeviceWithIdentifier(message.identifier);null!==device&&(device.connectionState=CWDeviceConnectionState.CONNECTED,nativeCallRemoteDidConnect(device.getIdentifier()),setTimeout(function(){CWEventManager.trigger("deviceConnected",device)},1e3))};return{parse:parse}}(),CWUtil=function(){var isInt=function(value){return value===parseInt(value)},isObject=function(value){return"object"==typeof value&&null!==value},inArray=function(value,array){return array.indexOf(value)>-1};return{isInt:isInt,isObject:isObject,inArray:inArray}}(),Connichiwa=function(){var _websocket,_identifier,_websocketConnectionAttempts=0,_connectWebsocket=function(){(void 0===_websocket||_websocket.state!==CONNECTING&&_websocket.state!==OPEN)&&(_cleanupWebsocket(),CWDebug.log(3,"Connecting websocket"),_websocket=new WebSocket("ws://127.0.0.1:8001"),_websocket.onopen=onWebsocketOpen,_websocket.onmessage=onWebsocketMessage,_websocket.onclose=onWebsocketClose,_websocket.onerror=onWebsocketError,_websocketConnectionAttempts++)},onWebsocketOpen=function(){CWDebug.log(3,"Websocket opened"),nativeCallWebsocketDidOpen(),_websocketConnectionAttempts=0},onWebsocketMessage=function(e){var message=e.data;CWDebug.log(4,"Received message: "+message),CWRemoteCommunicationParser.parse(message)},onWebsocketError=function(){onWebsocketClose()},onWebsocketClose=function(){return CWDebug.log(3,"Websocket closed"),_cleanupWebsocket(),_websocketConnectionAttempts>=5?(nativeCallWebsocketDidClose(),void 0):(setTimeout(function(){_connectWebsocket()},1e3*_websocketConnectionAttempts),void 0)},_cleanupWebsocket=function(){void 0!==_websocket&&(_websocket.onopen=void 0,_websocket.onmessage=void 0,_websocket.onclose=void 0,_websocket.onerror=void 0,_websocket=void 0)},_send=function(message){CWDebug.log(4,"Sending message "+message),_websocket.send(message)},_setIdentifier=function(value){return void 0!==_identifier?!1:(_identifier=value,CWDebug.log(2,"Local identifier set to "+_identifier),!0)},getIdentifier=function(){return _identifier},on=function(event,callback){var validEvents=["ready","deviceDetected","deviceDistanceChanged","deviceLost","deviceConnected","deviceDisconnected","connectFailed"];if(CWUtil.inArray(event,validEvents)===!1)throw"Registering for invalid event: "+event;CWEventManager.register(event,callback)},connect=function(device){if(CWDevice.prototype.isPrototypeOf(device)===!1)throw"Need a CWDevice to connect to";device.canBeConnected()!==!1&&(device.connectionState=CWDeviceConnectionState.CONNECTING,nativeCallConnectRemote(device.getIdentifier()))},send=function(device,message){message.target=device.getIdentifier(),Connichiwa._send(JSON.stringify(message))};return{_connectWebsocket:_connectWebsocket,_send:_send,_setIdentifier:_setIdentifier,getIdentifier:getIdentifier,on:on,connect:connect,send:send}}();