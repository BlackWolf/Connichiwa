"use strict";function CWDeviceID(major,minor){if(CWUtil.isInt(major)===!1||CWUtil.isInt(minor)===!1)throw"CWDeviceID must contain a valid major and a minor value";var _major=major,_minor=minor;return this.getMajor=function(){return _major},this.getMinor=function(){return _minor},this}function CWDevice(id,options){if(CWDeviceID.prototype.isPrototypeOf(id)===!1)throw"Cannot create device without a valid CWDeviceID";CWUtil.isObject(options)===!1&&(options={});var passedOptions=options;options={};var defaultOptions={proximity:"unknown",isRemote:!0};$.extend(options,defaultOptions,passedOptions);var _id=id,_isRemote=options.isRemote,_proximity=options.proximity;return this.updateData=function(newData){if(CWUtil.isObject(newData)!==!1){var oldProximity=_proximity;newData.proximity&&(_proximity=newData.proximity),oldProximity!==_proximity&&(CWDebug.log("Distance of "+this+" changed to "+_proximity),CWEventManager.trigger("deviceChange",this))}},this.getID=function(){return _id},this.isRemote=function(){return _isRemote},this.getProximity=function(){return _proximity},this}var CWDebug=function(){var CWDEBUG=!1,log=function(message){CWDEBUG&&console.log("WEBLIB    "+_getDateString()+" -- "+message)},_getDateString=function(date){void 0===date&&(date=new Date);var hours=date.getHours();hours=1===hours.length?"0"+hours:hours;var minutes=date.getMinutes();minutes=1===minutes.length?"0"+minutes:minutes;var seconds=date.getSeconds();seconds=1===seconds.length?"0"+seconds:seconds;var milliseconds=date.getMilliseconds();return milliseconds=1===milliseconds.length?"00"+milliseconds:milliseconds,milliseconds=2===milliseconds.length?"0"+milliseconds:milliseconds,hours+":"+minutes+":"+seconds+"."+milliseconds};return{log:log}}();CWDeviceID.prototype.equalTo=function(obj){return CWDeviceID.prototype.isPrototypeOf(obj)===!1?!1:this.getMajor()===obj.getMajor()&&this.getMinor()===obj.getMinor()},CWDeviceID.prototype.toString=function(){return"("+this.getMajor()+"."+this.getMinor()+")"},CWDevice.fromData=function(data){if(CWUtil.isObject(data)===!1)throw"Cannot instantiate device without data";var major=data.major,minor=data.minor;delete data.major,delete data.minor;var id=new CWDeviceID(major,minor);return new CWDevice(id,data)},CWDevice.prototype.equalTo=function(obj){return CWDevice.prototype.isPrototypeOf(obj)===!1?!1:this.getID().equalTo(obj.getID())},CWDevice.prototype.toString=function(){return""+this.getID()};var CWDeviceManager=function(){var _localDevice,_remoteDevices=[],addDevice=function(newDevice){if(CWDevice.prototype.isPrototypeOf(newDevice)===!1)throw"Cannot add a non-device";var existingDevice=getDevice(newDevice.getID());return null!==existingDevice?existingDevice:(newDevice.isRemote()!==!0?setLocalDevice(newDevice):(CWDebug.log("New remote device "+(""+newDevice)+" at distance "+newDevice.getProximity()),_remoteDevices.push(newDevice),CWEventManager.trigger("deviceChange",newDevice)),!0)},setLocalDevice=function(localDevice){if(CWDevice.prototype.isPrototypeOf(localDevice)===!1)throw"Local device must be a device";if(void 0!==_localDevice)throw"Local device cannot be set twice";if(localDevice.isRemote()!==!1)throw"Local device must be local";CWDebug.log("Adding local device info: "+(""+localDevice)),_localDevice=localDevice,CWEventManager.trigger("localDeviceSet",_localDevice)},setLocalDeviceWithData=function(localDeviceData){CWUtil.isObject(localDeviceData)===!1&&(localDeviceData={}),localDeviceData.isRemote=!1;var localDevice=CWDevice.fromData(localDeviceData);setLocalDevice(localDevice)},addOrUpdateDevice=function(deviceData){var newDevice=CWDevice.fromData(deviceData),addResult=addDevice(newDevice);if(addResult!==!0){var existingDevice=addResult;existingDevice.updateData(deviceData)}},getDevice=function(id){if(CWDeviceID.prototype.isPrototypeOf(id)===!1)throw"A DeviceID is needed to search for an existing device";for(var i=0;_remoteDevices.length>i;i++){var remoteDevice=_remoteDevices[i];if(remoteDevice.getID().equalTo(id))return remoteDevice}return null};return{addDevice:addDevice,setLocalDevice:setLocalDevice,setLocalDeviceWithData:setLocalDeviceWithData,addOrUpdateDevice:addOrUpdateDevice,getDevice:getDevice}}(),CWEventManager=function(){var _events={},register=function(event,callback){if("string"!=typeof event)throw"Event name must be a string";if("function"!=typeof callback)throw"Event callback must be a function";_events[event]||(_events[event]=[]),_events[event].push(callback),CWDebug.log("Attached callback to "+event)},trigger=function(event){if(_events[event]){var args=Array.prototype.slice.call(arguments);args.shift();for(var i=0;_events[event].length>i;i++){var callback=_events[event][i];callback.apply(null,args)}}};return{register:register,trigger:trigger}}(),CWNativeCommunicationParser=function(){var parse=function(object){switch(object.type){case"localinfo":CWDeviceManager.setLocalDeviceWithData(object);break;case"ibeacon":CWDeviceManager.addOrUpdateDevice(object)}};return{parse:parse}}(),CWUtil=function(){var isInt=function(value){return value===parseInt(value)},isObject=function(obj){return"object"==typeof obj&&null!==obj},inArray=function(value,array){return array.indexOf(value)>-1};return{isInt:isInt,isObject:isObject,inArray:inArray}}(),CWWebserverCommunicationParser=function(){var parse=function(object){switch(object.type){case"debug":CWDebug.CWDEBUG=Boolean(object.cwdebug)}};return{parse:parse}}(),Connichiwa=function(){var _websocket=new WebSocket("ws://127.0.0.1:8001");_websocket.onopen=function(){CWDebug.log("Websocket opened"),CWEventManager.trigger("ready")},_websocket.onmessage=function(e){var message=e.data;CWDebug.log("message: "+message);var object=JSON.parse(message);CWNativeCommunicationParser.parse(object)},_websocket.onerror=function(){CWDebug.log("Websocket error")},_websocket.onclose=function(){CWDebug.log("Websocket closed")};var on=function(event,callback){var validEvents=["ready","localDeviceSet","deviceChange"];if(CWUtil.inArray(event,validEvents)===!1)throw"Registering for invalid event: "+event;CWEventManager.register(event,callback)};return{on:on}}();